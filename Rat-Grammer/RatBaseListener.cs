//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/lord_faceless/RiderProjects/Rat/Rat-Grammer/Antlr/Rat.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRatListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class RatBaseListener : IRatListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] RatParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] RatParser.CodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.statementblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementblock([NotNull] RatParser.StatementblockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.statementblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementblock([NotNull] RatParser.StatementblockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RatParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RatParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressions([NotNull] RatParser.ExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressions([NotNull] RatParser.ExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] RatParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] RatParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.leftoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftoperator([NotNull] RatParser.LeftoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.leftoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftoperator([NotNull] RatParser.LeftoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.zerooperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterZerooperator([NotNull] RatParser.ZerooperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.zerooperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitZerooperator([NotNull] RatParser.ZerooperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.firstoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFirstoperator([NotNull] RatParser.FirstoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.firstoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFirstoperator([NotNull] RatParser.FirstoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.secondoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSecondoperator([NotNull] RatParser.SecondoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.secondoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSecondoperator([NotNull] RatParser.SecondoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.thirdoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThirdoperator([NotNull] RatParser.ThirdoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.thirdoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThirdoperator([NotNull] RatParser.ThirdoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncdef([NotNull] RatParser.FuncdefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncdef([NotNull] RatParser.FuncdefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcargs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncargs([NotNull] RatParser.FuncargsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcargs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncargs([NotNull] RatParser.FuncargsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcarg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncarg([NotNull] RatParser.FuncargContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcarg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncarg([NotNull] RatParser.FuncargContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunccall([NotNull] RatParser.FunccallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunccall([NotNull] RatParser.FunccallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.exprargs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprargs([NotNull] RatParser.ExprargsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.exprargs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprargs([NotNull] RatParser.ExprargsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.ifexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfexpr([NotNull] RatParser.IfexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.ifexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfexpr([NotNull] RatParser.IfexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfstmt([NotNull] RatParser.IfstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfstmt([NotNull] RatParser.IfstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] RatParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] RatParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange([NotNull] RatParser.RangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.range"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange([NotNull] RatParser.RangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] RatParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] RatParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] RatParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] RatParser.NumberContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
