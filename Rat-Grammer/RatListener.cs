//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/lord_faceless/RiderProjects/Rat/Rat-Grammer/Antlr/Rat.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RatParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IRatListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode([NotNull] RatParser.CodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode([NotNull] RatParser.CodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.statementblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementblock([NotNull] RatParser.StatementblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.statementblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementblock([NotNull] RatParser.StatementblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RatParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RatParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.expressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressions([NotNull] RatParser.ExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.expressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressions([NotNull] RatParser.ExpressionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RatParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RatParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.leftoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftoperator([NotNull] RatParser.LeftoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.leftoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftoperator([NotNull] RatParser.LeftoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.zerooperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZerooperator([NotNull] RatParser.ZerooperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.zerooperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZerooperator([NotNull] RatParser.ZerooperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.firstoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirstoperator([NotNull] RatParser.FirstoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.firstoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirstoperator([NotNull] RatParser.FirstoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.secondoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondoperator([NotNull] RatParser.SecondoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.secondoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondoperator([NotNull] RatParser.SecondoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.thirdoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThirdoperator([NotNull] RatParser.ThirdoperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.thirdoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThirdoperator([NotNull] RatParser.ThirdoperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncdef([NotNull] RatParser.FuncdefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncdef([NotNull] RatParser.FuncdefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncargs([NotNull] RatParser.FuncargsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncargs([NotNull] RatParser.FuncargsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funcarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncarg([NotNull] RatParser.FuncargContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funcarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncarg([NotNull] RatParser.FuncargContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.funccall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunccall([NotNull] RatParser.FunccallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.funccall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunccall([NotNull] RatParser.FunccallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.exprargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprargs([NotNull] RatParser.ExprargsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.exprargs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprargs([NotNull] RatParser.ExprargsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.ifexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfexpr([NotNull] RatParser.IfexprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.ifexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfexpr([NotNull] RatParser.IfexprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfstmt([NotNull] RatParser.IfstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfstmt([NotNull] RatParser.IfstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] RatParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] RatParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange([NotNull] RatParser.RangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange([NotNull] RatParser.RangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] RatParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] RatParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RatParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] RatParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RatParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] RatParser.NumberContext context);
}
