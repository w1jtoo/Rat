//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/wanadoo/programming/c#/Rat/Rat-Grammer/Antlr/rat.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ratParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IratVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCode([NotNull] ratParser.CodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.extdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtdef([NotNull] ratParser.ExtdefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.ifblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfblock([NotNull] ratParser.IfblockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.typedef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedef([NotNull] ratParser.TypedefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.funcdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncdef([NotNull] ratParser.FuncdefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.expressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressions([NotNull] ratParser.ExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] ratParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.leftUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftUnaryOperator([NotNull] ratParser.LeftUnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.rightUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRightUnaryOperator([NotNull] ratParser.RightUnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.zeroLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitZeroLevelOperator([NotNull] ratParser.ZeroLevelOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.firstLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFirstLevelOperator([NotNull] ratParser.FirstLevelOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.secondLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSecondLevelOperator([NotNull] ratParser.SecondLevelOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.thirdLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThirdLevelOperator([NotNull] ratParser.ThirdLevelOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.forthLevelOpeator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForthLevelOpeator([NotNull] ratParser.ForthLevelOpeatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] ratParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.functype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctype([NotNull] ratParser.FunctypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.funcarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncarg([NotNull] ratParser.FuncargContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.tupledef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupledef([NotNull] ratParser.TupledefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] ratParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.tupletype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupletype([NotNull] ratParser.TupletypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ratParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg([NotNull] ratParser.ArgContext context);
}
