//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/wanadoo/programming/c#/Rat/Rat-Grammer/Antlr/rat.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ratParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IratListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode([NotNull] ratParser.CodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode([NotNull] ratParser.CodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.extdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtdef([NotNull] ratParser.ExtdefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.extdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtdef([NotNull] ratParser.ExtdefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.ifblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfblock([NotNull] ratParser.IfblockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.ifblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfblock([NotNull] ratParser.IfblockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.typedef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedef([NotNull] ratParser.TypedefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.typedef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedef([NotNull] ratParser.TypedefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.funcdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncdef([NotNull] ratParser.FuncdefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.funcdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncdef([NotNull] ratParser.FuncdefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.expressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressions([NotNull] ratParser.ExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.expressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressions([NotNull] ratParser.ExpressionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] ratParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] ratParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.leftUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftUnaryOperator([NotNull] ratParser.LeftUnaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.leftUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftUnaryOperator([NotNull] ratParser.LeftUnaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.rightUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightUnaryOperator([NotNull] ratParser.RightUnaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.rightUnaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightUnaryOperator([NotNull] ratParser.RightUnaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.zeroLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterZeroLevelOperator([NotNull] ratParser.ZeroLevelOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.zeroLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitZeroLevelOperator([NotNull] ratParser.ZeroLevelOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.firstLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirstLevelOperator([NotNull] ratParser.FirstLevelOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.firstLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirstLevelOperator([NotNull] ratParser.FirstLevelOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.secondLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondLevelOperator([NotNull] ratParser.SecondLevelOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.secondLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondLevelOperator([NotNull] ratParser.SecondLevelOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.thirdLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThirdLevelOperator([NotNull] ratParser.ThirdLevelOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.thirdLevelOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThirdLevelOperator([NotNull] ratParser.ThirdLevelOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.forthLevelOpeator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForthLevelOpeator([NotNull] ratParser.ForthLevelOpeatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.forthLevelOpeator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForthLevelOpeator([NotNull] ratParser.ForthLevelOpeatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] ratParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] ratParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.functype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctype([NotNull] ratParser.FunctypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.functype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctype([NotNull] ratParser.FunctypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.funcarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncarg([NotNull] ratParser.FuncargContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.funcarg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncarg([NotNull] ratParser.FuncargContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.tupledef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupledef([NotNull] ratParser.TupledefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.tupledef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupledef([NotNull] ratParser.TupledefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ratParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ratParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.tupletype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupletype([NotNull] ratParser.TupletypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.tupletype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupletype([NotNull] ratParser.TupletypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] ratParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] ratParser.ArgContext context);
}
