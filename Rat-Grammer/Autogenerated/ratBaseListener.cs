//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/wanadoo/programming/c#/Rat/Rat-Grammer/Antlr/rat.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IratListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ratBaseListener : IratListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] ratParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] ratParser.CodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.extdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtdef([NotNull] ratParser.ExtdefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.extdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtdef([NotNull] ratParser.ExtdefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.ifblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfblock([NotNull] ratParser.IfblockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.ifblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfblock([NotNull] ratParser.IfblockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedef([NotNull] ratParser.TypedefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.typedef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedef([NotNull] ratParser.TypedefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.funcdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncdef([NotNull] ratParser.FuncdefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.funcdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncdef([NotNull] ratParser.FuncdefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressions([NotNull] ratParser.ExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressions([NotNull] ratParser.ExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ratParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ratParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.leftUnaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftUnaryOperator([NotNull] ratParser.LeftUnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.leftUnaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftUnaryOperator([NotNull] ratParser.LeftUnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.rightUnaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightUnaryOperator([NotNull] ratParser.RightUnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.rightUnaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightUnaryOperator([NotNull] ratParser.RightUnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.zeroLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterZeroLevelOperator([NotNull] ratParser.ZeroLevelOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.zeroLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitZeroLevelOperator([NotNull] ratParser.ZeroLevelOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.firstLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFirstLevelOperator([NotNull] ratParser.FirstLevelOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.firstLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFirstLevelOperator([NotNull] ratParser.FirstLevelOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.secondLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSecondLevelOperator([NotNull] ratParser.SecondLevelOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.secondLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSecondLevelOperator([NotNull] ratParser.SecondLevelOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.thirdLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThirdLevelOperator([NotNull] ratParser.ThirdLevelOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.thirdLevelOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThirdLevelOperator([NotNull] ratParser.ThirdLevelOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.forthLevelOpeator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForthLevelOpeator([NotNull] ratParser.ForthLevelOpeatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.forthLevelOpeator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForthLevelOpeator([NotNull] ratParser.ForthLevelOpeatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] ratParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] ratParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.functype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctype([NotNull] ratParser.FunctypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.functype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctype([NotNull] ratParser.FunctypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.funcarg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncarg([NotNull] ratParser.FuncargContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.funcarg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncarg([NotNull] ratParser.FuncargContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.tupledef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupledef([NotNull] ratParser.TupledefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.tupledef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupledef([NotNull] ratParser.TupledefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] ratParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] ratParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.tupletype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupletype([NotNull] ratParser.TupletypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.tupletype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupletype([NotNull] ratParser.TupletypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ratParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] ratParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ratParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] ratParser.ArgContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
